<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\LPC_UART_SPI_I2C.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\LPC_UART_SPI_I2C.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060422: Last Updated: Fri Jan 26 17:41:46 2018
<BR><P>
<H3>Maximum Stack Usage =         88 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; init_spi &rArr; Chip_SSP_Set_BitRate &rArr; Chip_Clock_GetMainClockRate &rArr; Chip_Clock_GetWDTOSCRate &rArr; Chip_Clock_GetWDTLFORate
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[43]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[10]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">NMI_Handler</a><BR>
 <LI><a href="#[11]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">HardFault_Handler</a><BR>
 <LI><a href="#[12]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">SVC_Handler</a><BR>
 <LI><a href="#[13]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[13]">PendSV_Handler</a><BR>
 <LI><a href="#[14]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[14]">SysTick_Handler</a><BR>
 <LI><a href="#[1f]">Reserved_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f]">Reserved_IRQHandler</a><BR>
 <LI><a href="#[2a]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2a]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[2a]">ADC_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[2c]">BOD_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[15]">FLEX_INT0_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[16]">FLEX_INT1_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[17]">FLEX_INT2_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[18]">FLEX_INT3_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[19]">FLEX_INT4_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[1a]">FLEX_INT5_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[1b]">FLEX_INT6_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[1c]">FLEX_INT7_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[2d]">FMC_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[1d]">GINT0_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[1e]">GINT1_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[11]">HardFault_Handler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[21]">I2C_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[2f]">IOH_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[10]">NMI_Handler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[13]">PendSV_Handler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[1f]">Reserved_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced 6 times from startup_lpc11uxx.o(RESET)
 <LI><a href="#[f]">Reset_Handler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[26]">SSP0_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[20]">SSP1_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[12]">SVC_Handler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[14]">SysTick_Handler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[30]">SystemInit</a> from system_lpc11uxx.o(i.SystemInit) referenced from startup_lpc11uxx.o(.text)
 <LI><a href="#[22]">TIMER16_0_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[23]">TIMER16_1_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[24]">TIMER32_0_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[25]">TIMER32_1_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[27]">UART_IRQHandler</a> from main.o(i.UART_IRQHandler) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[2e]">USBWakeup_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[29]">USB_FIQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[28]">USB_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[2b]">WDT_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[32]">__main</a> from __main.o(!!!main) referenced from startup_lpc11uxx.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[32]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[33]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[35]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[64]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[65]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[36]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[66]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[3a]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[67]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[68]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[69]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[6a]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[6b]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[6c]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[6d]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[6e]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[6f]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[70]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[71]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[72]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[73]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[74]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[75]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[76]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[77]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[78]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[79]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[7a]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[7b]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[3f]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[7c]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[7d]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[7e]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[7f]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[80]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[81]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[82]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[34]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[83]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[37]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[39]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[84]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[3b]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; init_spi &rArr; Chip_SSP_Set_BitRate &rArr; Chip_Clock_GetMainClockRate &rArr; Chip_Clock_GetWDTOSCRate &rArr; Chip_Clock_GetWDTLFORate
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[85]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[45]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[3e]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[86]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[40]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[f]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>Reserved_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reserved_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reserved_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>FLEX_INT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>FLEX_INT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>FLEX_INT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>FLEX_INT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>FLEX_INT4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>FLEX_INT5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>FLEX_INT6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>FLEX_INT7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>GINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>GINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>I2C_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>IOH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>SSP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>SSP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIMER16_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIMER16_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIMER32_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIMER32_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>USBWakeup_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>USB_FIQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_lpc11uxx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[87]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[4c]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_delay
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SSP_Set_BitRate
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetWDTLFORate
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetBaudrate
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>

<P><STRONG><a name="[88]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[89]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[8a]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[9]"></a>__rt_heap_escrow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[8]"></a>__rt_heap_expand</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[38]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[3d]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[8b]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[42]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[8c]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[8d]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[8e]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[8f]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[41]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[46]"></a>Chip_Clock_GetMainClockRate</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, spi.o(i.Chip_Clock_GetMainClockRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Chip_Clock_GetMainClockRate &rArr; Chip_Clock_GetWDTOSCRate &rArr; Chip_Clock_GetWDTLFORate
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetWDTOSCRate
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemPllOutClockRate
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemPllInClockRate
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SSP_Set_BitRate
</UL>

<P><STRONG><a name="[47]"></a>Chip_Clock_GetSystemPllInClockRate</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, spi.o(i.Chip_Clock_GetSystemPllInClockRate))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemPllOutClockRate
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetMainClockRate
</UL>

<P><STRONG><a name="[49]"></a>Chip_Clock_GetSystemPllOutClockRate</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, spi.o(i.Chip_Clock_GetSystemPllOutClockRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Chip_Clock_GetSystemPllOutClockRate
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemPllInClockRate
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetPllFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetMainClockRate
</UL>

<P><STRONG><a name="[48]"></a>Chip_Clock_GetWDTOSCRate</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, spi.o(i.Chip_Clock_GetWDTOSCRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Chip_Clock_GetWDTOSCRate &rArr; Chip_Clock_GetWDTLFORate
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetWDTLFORate
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetMainClockRate
</UL>

<P><STRONG><a name="[4d]"></a>Chip_SSP_Set_BitRate</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, spi.o(i.Chip_SSP_Set_BitRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Chip_SSP_Set_BitRate &rArr; Chip_Clock_GetMainClockRate &rArr; Chip_Clock_GetWDTOSCRate &rArr; Chip_Clock_GetWDTLFORate
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IP_SSP_Set_ClockRate
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetMainClockRate
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_spi
</UL>

<P><STRONG><a name="[4f]"></a>DEBUGPutChar</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lpc11xx_debug.o(i.DEBUGPutChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = DEBUGPutChar &rArr; UART_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUGPuts
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUGPutHex
</UL>

<P><STRONG><a name="[51]"></a>DEBUGPutHex</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lpc11xx_debug.o(i.DEBUGPutHex))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = DEBUGPutHex &rArr; DEBUGPuts &rArr; DEBUGPutChar &rArr; UART_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUGPutChar
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUGPuts
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[52]"></a>DEBUGPuts</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lpc11xx_debug.o(i.DEBUGPuts))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = DEBUGPuts &rArr; DEBUGPutChar &rArr; UART_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUGPutChar
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9555_write
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUGPutHex
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[53]"></a>DebugInit</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, lpc11xx_debug.o(i.DebugInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = DebugInit &rArr; UART_Init &rArr; UART_SetBaudrate
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[55]"></a>I2C_delay</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, i2c.o(i.I2C_delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_stop
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_start
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_sendbyte
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_wait_ack
</UL>

<P><STRONG><a name="[56]"></a>I2C_wait_ack</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, i2c.o(i.I2C_wait_ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2C_wait_ack &rArr; i2c_stop &rArr; I2C_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_stop
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9555_write
</UL>

<P><STRONG><a name="[4e]"></a>IP_SSP_Set_ClockRate</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, spi.o(i.IP_SSP_Set_ClockRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IP_SSP_Set_ClockRate
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SSP_Set_BitRate
</UL>

<P><STRONG><a name="[58]"></a>PCA9555_write</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, i2c.o(i.PCA9555_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = PCA9555_write &rArr; DEBUGPuts &rArr; DEBUGPutChar &rArr; UART_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_stop
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_start
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_sendbyte
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_wait_ack
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUGPuts
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[30]"></a>SystemInit</STRONG> (Thumb, 194 bytes, Stack size 8 bytes, system_lpc11uxx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(.text)
</UL>
<P><STRONG><a name="[27]"></a>UART_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, main.o(i.UART_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = UART_IRQHandler &rArr; UART_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Send
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>UART_Init</STRONG> (Thumb, 154 bytes, Stack size 8 bytes, lpc11xx_uart.o(i.UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART_Init &rArr; UART_SetBaudrate
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetBaudrate
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugInit
</UL>

<P><STRONG><a name="[5b]"></a>UART_Receive</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, lpc11xx_uart.o(i.UART_Receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_Receive
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IRQHandler
</UL>

<P><STRONG><a name="[50]"></a>UART_Send</STRONG> (Thumb, 80 bytes, Stack size 28 bytes, lpc11xx_uart.o(i.UART_Send))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = UART_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUGPutChar
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IRQHandler
</UL>

<P><STRONG><a name="[5c]"></a>UART_SetBaudrate</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, lpc11xx_uart.o(i.UART_SetBaudrate))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART_SetBaudrate
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[5d]"></a>delay</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, main.o(i.delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = delay
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ml8160_testSPI
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5a]"></a>i2c_sendbyte</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, i2c.o(i.i2c_sendbyte))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = i2c_sendbyte &rArr; I2C_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9555_write
</UL>

<P><STRONG><a name="[59]"></a>i2c_start</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, i2c.o(i.i2c_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = i2c_start &rArr; I2C_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9555_write
</UL>

<P><STRONG><a name="[57]"></a>i2c_stop</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, i2c.o(i.i2c_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = i2c_stop &rArr; I2C_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_wait_ack
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9555_write
</UL>

<P><STRONG><a name="[62]"></a>init_i2c</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, i2c.o(i.init_i2c))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[61]"></a>init_spi</STRONG> (Thumb, 228 bytes, Stack size 8 bytes, spi.o(i.init_spi))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = init_spi &rArr; Chip_SSP_Set_BitRate &rArr; Chip_Clock_GetMainClockRate &rArr; Chip_Clock_GetWDTOSCRate &rArr; Chip_Clock_GetWDTLFORate
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SSP_Set_BitRate
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[60]"></a>l11uxx_spi_receiveByte</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, fpm.o(i.l11uxx_spi_receiveByte))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpm_readRegister
</UL>

<P><STRONG><a name="[5f]"></a>l11uxx_spi_sendByte</STRONG> (Thumb, 110 bytes, Stack size 12 bytes, fpm.o(i.l11uxx_spi_sendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = l11uxx_spi_sendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpm_readRegister
</UL>

<P><STRONG><a name="[3c]"></a>main</STRONG> (Thumb, 296 bytes, Stack size 16 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = main &rArr; init_spi &rArr; Chip_SSP_Set_BitRate &rArr; Chip_Clock_GetMainClockRate &rArr; Chip_Clock_GetWDTOSCRate &rArr; Chip_Clock_GetWDTLFORate
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ml8160_testSPI
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_spi
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_i2c
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA9555_write
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugInit
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUGPuts
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUGPutHex
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[63]"></a>ml8160_testSPI</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, fpm.o(i.ml8160_testSPI))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = ml8160_testSPI &rArr; fpm_readRegister &rArr; l11uxx_spi_sendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpm_readRegister
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[4a]"></a>Chip_Clock_GetPllFreq</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, spi.o(i.Chip_Clock_GetPllFreq))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemPllOutClockRate
</UL>

<P><STRONG><a name="[4b]"></a>Chip_Clock_GetWDTLFORate</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, spi.o(i.Chip_Clock_GetWDTLFORate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Chip_Clock_GetWDTLFORate
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetWDTOSCRate
</UL>

<P><STRONG><a name="[5e]"></a>fpm_readRegister</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, fpm.o(i.fpm_readRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = fpm_readRegister &rArr; l11uxx_spi_sendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l11uxx_spi_sendByte
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l11uxx_spi_receiveByte
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ml8160_testSPI
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[44]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
